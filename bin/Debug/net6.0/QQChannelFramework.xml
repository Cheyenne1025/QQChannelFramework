<?xml version="1.0"?>
<doc>
    <assembly>
        <name>QQChannelFramework</name>
    </assembly>
    <members>
        <member name="T:QQChannelFramework.Api.ApiFactory">
            <summary>
            Api加工厂
            </summary>
        </member>
        <member name="M:QQChannelFramework.Api.ApiFactory.Process(QQChannelFramework.Api.Base.IRawApiInfo,System.Collections.Generic.IDictionary{QQChannelFramework.Api.Types.ParamType,System.String})">
            <summary>
            加工Api
            </summary>
            <param name="rawApi"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Api.Base.ApiBase.UseBotIdentity">
            <summary>
            使用Bot身份
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Api.Base.ApiBase.WithData(System.Object)">
            <summary>
            携带数据
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Api.Base.ApiBase.UseReleaseMode">
            <summary>
            使用正式模式 (默认)
            </summary>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Api.Base.ApiBase.UseSandBoxMode">
            <summary>
            使用沙箱模式
            </summary>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Api.Base.ApiBase.RequestAsync(QQChannelFramework.Api.Base.IRawApiInfo)">
            <summary>
            使用源Api信息进行异步请求
            </summary>
            <param name="apiInfo"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Api.Base.ApiBase.RequestAsync(QQChannelFramework.Api.Base.ProcessedApiInfo)">
            <summary>
            使用处理过的Api信息进行异步请求
            </summary>
            <param name="apiInfo"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Api.Base.ApiBase.InspectionHttpCode(System.Net.Http.HttpResponseMessage@)">
            <summary>
            检查HttpCode
            </summary>
            <param name="httpResponseMessage"></param>
        </member>
        <member name="M:QQChannelFramework.Api.Base.ApiBase.InspectionResultCode(Newtonsoft.Json.Linq.JToken@)">
            <summary>
            检查请求结果Code
            </summary>
            <param name="resultData"></param>
        </member>
        <member name="T:QQChannelFramework.Api.Base.IRawApiInfo">
            <summary>
            源Api信息
            </summary>
        </member>
        <member name="P:QQChannelFramework.Api.Base.IRawApiInfo.Version">
            <summary>
            Api版本
            </summary>
        </member>
        <member name="P:QQChannelFramework.Api.Base.IRawApiInfo.NeedParam">
            <summary>
            是否需要参数
            </summary>
        </member>
        <member name="P:QQChannelFramework.Api.Base.IRawApiInfo.Url">
            <summary>
            源Api地址
            </summary>
        </member>
        <member name="P:QQChannelFramework.Api.Base.IRawApiInfo.Method">
            <summary>
            请求方法
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.Base.ProcessedApiInfo">
            <summary>
            已加工的Api信息
            </summary>
        </member>
        <member name="P:QQChannelFramework.Api.Base.ProcessedApiInfo.RawInfo">
            <summary>
            源信息
            </summary>
        </member>
        <member name="F:QQChannelFramework.Api.Base.ProcessedApiInfo.Url">
            <summary>
            Api链接
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.QQChannelApi">
            <summary>
            QQ频道机器人OpenApi
            </summary>
        </member>
        <member name="M:QQChannelFramework.Api.QQChannelApi.UseReleaseMode">
            <summary>
            使用正式模式 (默认)
            </summary>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Api.QQChannelApi.UseSandBoxMode">
            <summary>
            使用沙盒模式
            </summary>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Api.QQChannelApi.UseBotIdentity">
            <summary>
            使用Bot身份
            </summary>
            <returns></returns>
        </member>
        <member name="T:QQChannelFramework.Api.ChannelApi">
            <summary>
            频道Api
            </summary>
        </member>
        <member name="M:QQChannelFramework.Api.ChannelApi.GetInfoAsync(System.String)">
            <summary>
            获取主频道信息
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.ChannelRoleApi">
            <summary>
            频道身份组Api
            </summary>
        </member>
        <member name="M:QQChannelFramework.Api.ChannelRoleApi.GetRolesAsync(System.String)">
            <summary>
            获取所有频道身份组
            </summary>
            <returns>元组 (身份组列表,身份组当前数量,身份组上限)</returns>
        </member>
        <member name="M:QQChannelFramework.Api.ChannelRoleApi.CreateAsync(QQChannelFramework.Models.ParamModels.Filter,QQChannelFramework.Models.ParamModels.Info,System.String)">
            <summary>
            创建频道身份组
            </summary>
            <param name="filter">标识需要设置/修改哪些字段</param>
            <param name="info">携带需要设置/修改的字段内容</param>
            <param name="guild_id"></param>
            <returns>创建的身份组ID</returns>
        </member>
        <member name="M:QQChannelFramework.Api.ChannelRoleApi.UpdateInfoAsync(QQChannelFramework.Models.ParamModels.Filter,QQChannelFramework.Models.ParamModels.Info,System.String,System.String)">
            <summary>
            更新频道身份组
            </summary>
            <param name="filter">标识需要设置/修改哪些字段</param>
            <param name="info">携带需要设置/修改的字段内容</param>
            <param name="guild_id">频道Guild</param>
            <param name="role_id">身份组ID</param>
            <returns>元组 (频道ID,身份组ID)</returns>
        </member>
        <member name="M:QQChannelFramework.Api.ChannelRoleApi.DeleteAsync(System.String,System.String)">
            <summary>
            删除频道身份组
            </summary>
            <param name="guild_id">频道Guild</param>
            <param name="role_id">身份组ID</param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:QQChannelFramework.Api.ChannelRoleApi.AddMemberAsync(System.String,System.String,System.String,System.String)">
            <summary>
            增加频道身份组成员
            <para>注: 如果要从身份组是 「子频道管理员」增加成员, 需要传递childChannelId参数，指定添加到哪个子频道</para>
            </summary>
            <param name="guild_id">频道Guild</param>
            <param name="user_id">成员ID</param>
            <param name="role_id">身份组ID</param>
            <param name="childChannelId">子频道ID</param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Api.ChannelRoleApi.DeleteMemberAsync(System.String,System.String,System.String,System.String)">
            <summary>
            删除频道身份组成员
            <para>注: 如果要从身份组是 「子频道管理员」删除成员, 需要传递childChannelId参数，指定添加到哪个子频道</para>
            </summary>
            <param name="guild_id">频道Guild</param>
            <param name="user_id">成员ID</param>
            <param name="role_id">身份组ID</param>
            <param name="childChannelId">子频道ID</param>
            <returns></returns>
        </member>
        <member name="T:QQChannelFramework.Api.ChildChannelApi">
            <summary>
            子频道Api
            </summary>
        </member>
        <member name="M:QQChannelFramework.Api.ChildChannelApi.GetInfoAsync(System.String)">
            <summary>
            获取子频道信息
            </summary>
            <param name="childChannel_id">子频道ID</param>
            <returns>子频道信息</returns>
        </member>
        <member name="M:QQChannelFramework.Api.ChildChannelApi.GetChildChannelsAsync(System.String)">
            <summary>
            获取频道下的子频道列表
            </summary>
            <param name="guild_id">主频道Guild</param>
            <returns>元组 (子频道列表,数量)</returns>
        </member>
        <member name="T:QQChannelFramework.Api.ChildChannelPermissionsApi">
            <summary>
            子频道权限Api
            </summary>
        </member>
        <member name="M:QQChannelFramework.Api.ChildChannelPermissionsApi.GetPermissionsAsync(System.String,System.String)">
            <summary>
            获取用户在子频道的权限
            </summary>
            <param name="channel_id">子频道ID</param>
            <param name="user_id">用户ID</param>
            <returns>权限对象</returns>
        </member>
        <member name="M:QQChannelFramework.Api.ChildChannelPermissionsApi.UpdatePermissionsAsync(System.String,System.String,QQChannelFramework.Api.Types.ChannelPermissionType,QQChannelFramework.Api.Types.ChannelPermissionType)">
            <summary>
            修改指定子频道的权限
            </summary>
            <param name="channel_id">子频道ID</param>
            <param name="user_id">用户ID</param>
            <param name="add">添加的权限</param>
            <param name="remove">移除的权限</param>
            <returns></returns>
        </member>
        <member name="T:QQChannelFramework.Api.MemberApi">
            <summary>
            成员Api
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:QQChannelFramework.Api.MemberApi.GetInfoAsync(System.String,System.String)" -->
        <member name="T:QQChannelFramework.Api.MessageApi">
            <summary>
            消息Api
            </summary>
        </member>
        <member name="M:QQChannelFramework.Api.MessageApi.SendTextMessageAsync(System.String,System.String,System.String)">
            <summary>
            发送文字消息
            </summary>
            <param name="childChannelId"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Api.MessageApi.SendTemplateMessageAsync(System.String,Newtonsoft.Json.Linq.JObject,System.String)">
            <summary>
            发送模版消息
            </summary>
            <param name="childChannelId"></param>
            <param name="arkTemplate"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Api.MessageApi.SendImageMessageAsync(System.String,System.String,System.String)">
            <summary>
            发送图片消息
            </summary>
            <param name="childChannelId">子频道ID</param>
            <param name="imageUrl">图片Url</param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Api.MessageApi.SendImageAndTextMessageAsync(System.String,System.String,System.String,System.String)">
            <summary>
            发送图片+文字消息
            </summary>
            <param name="childChannelId">子频道ID</param>
            <param name="imageUrl">图片Url</param>
            <param name="content">文字内容</param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Api.MessageApi.GetMessageAsync(System.String,System.String)">
            <summary>
            获取指定消息
            </summary>
            <param name="childChannelId">子频道ID</param>
            <param name="message_id">消息ID</param>
            <returns>获取的消息</returns>
        </member>
        <member name="T:QQChannelFramework.Api.Raws.RawAddMemberToRoleApi">
            <summary>
            源Api信息 - 增加频道身份组成员
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.Raws.RawCreateChannelRoleApi">
            <summary>
            源Api信息 - 创建频道身份组
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.Raws.RawDeleteChannelRoleApi">
            <summary>
            源Api信息 - 删除频道身份组
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.Raws.RawDeleteMemberFromRoleApi">
            <summary>
            源Api信息 - 从身份组中删除成员
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.Raws.RawGetChannelRolesApi">
            <summary>
            源Api信息 - 获取频道全部身份组
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.Raws.RawGetChildChannelApi">
            <summary>
            源Api信息 - 获取子频道信息
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.Raws.RawGetChildChannelPermissionsApi">
            <summary>
            源Api信息 - 获取指定子频道的权限
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.Raws.RawGetChildChannelsApi">
            <summary>
            源Api信息 - 获取频道下的子频道列表
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.Raws.RawGetCurrentChannelsJoinedApi">
            <summary>
            源Api信息 - 获取当前用户频道列表
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.Raws.RawGetCurrentUserApi">
            <summary>
            源Api信息 - 获取当前用户信息
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.Raws.RawGetMainChannelApi">
            <summary>
            源Api信息 - 获取主频道信息
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.Raws.RawGetMemberInfoApi">
            <summary>
            源Api信息 - 获取频道中某成员信息
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.Raws.RawGetMessageApi">
            <summary>
            源Api信息 - 获取指定消息
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.Raws.RawGetWebSocketShardUrl">
            <summary>
            源Api信息 - 获取带分片 WSS 接入点
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.Raws.RawGetWebSocketUrlApi">
            <summary>
            源Api信息 - 获取通用 WSS 接入点
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.Raws.RawOperationAudioApi">
            <summary>
            源Api信息 - 音频控制
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.Raws.RawSendMessageApi">
            <summary>
            源Api信息 - 发送消息
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.Raws.RawSendTamplateMessageApi">
            <summary>
            源Api信息 - 发送模版信息
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.Raws.RawUpdateChannelRoleInfoApi">
            <summary>
            源Api信息 - 修改频道身份组
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.Raws.RawUpdateChildChannelPermissionsApi">
            <summary>
            源Api信息 - 改指定子频道的权限
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.Types.ChannelPermissionType">
            <summary>
            子频道权限标识
            </summary>
        </member>
        <member name="F:QQChannelFramework.Api.Types.ChannelPermissionType.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:QQChannelFramework.Api.Types.ChannelPermissionType.Check">
            <summary>
            子频道的查看权限
            </summary>
        </member>
        <member name="F:QQChannelFramework.Api.Types.ChannelPermissionType.Manager">
            <summary>
            子频道的管理权限
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.Types.ParamType">
            <summary>
            参数标识
            </summary>
        </member>
        <member name="F:QQChannelFramework.Api.Types.ParamType.guild_id">
            <summary>
            频道GuildId
            </summary>
        </member>
        <member name="F:QQChannelFramework.Api.Types.ParamType.user_id">
            <summary>
            成员Id
            </summary>
        </member>
        <member name="F:QQChannelFramework.Api.Types.ParamType.role_id">
            <summary>
            身份组Id
            </summary>
        </member>
        <member name="F:QQChannelFramework.Api.Types.ParamType.channel_id">
            <summary>
            子频道Id
            </summary>
        </member>
        <member name="F:QQChannelFramework.Api.Types.ParamType.message_id">
            <summary>
            消息Id
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.Types.RequestMode">
            <summary>
            请求模式
            </summary>
        </member>
        <member name="F:QQChannelFramework.Api.Types.RequestMode.Release">
            <summary>
            正式
            </summary>
        </member>
        <member name="F:QQChannelFramework.Api.Types.RequestMode.SandBox">
            <summary>
            沙箱
            </summary>
        </member>
        <member name="T:QQChannelFramework.Api.UserApi">
            <summary>
            用户Api
            </summary>
        </member>
        <member name="M:QQChannelFramework.Api.UserApi.GetCurrentUserAsync">
            <summary>
            获取当前用户信息
            </summary>
            <returns>当前用户信息</returns>
        </member>
        <member name="M:QQChannelFramework.Api.UserApi.GetJoinedChannelsAsync(System.String,System.String,System.Int32)">
            <summary>
            获取当前用户加入的频道列表
            </summary>
            <param name="before">频道guild_id 读此id之前的数据 (之前之后只能选一个)</param>
            <param name="after">频道guild_id 读此id之后的数据 (之前之后只能选一个)</param>
            <param name="limit">每次拉取多少条数据 默认100 最大100</param>
            <returns>元组 (用户加入的频道列表,数量)</returns>
        </member>
        <member name="M:QQChannelFramework.Api.WebSocketApi.GetUrlAsync">
            <summary>
            获取 WSS 通用接入点
            </summary>
            <returns>通用接入点</returns>
        </member>
        <member name="M:QQChannelFramework.Api.WebSocketApi.GetShardUrlAsync">
            <summary>
            获取带分片 WSS 接入点
            </summary>
            <returns>元组 (分片接入点基础信息，分片会话限制信息)</returns>
        </member>
        <member name="T:QQChannelFramework.Expansions.Bot.ChannelBot">
            <summary>
            QQ频道机器人
            </summary>
        </member>
        <member name="M:QQChannelFramework.Expansions.Bot.ChannelBot.OnlineAsync">
            <summary>
            机器人上线
            </summary>
        </member>
        <member name="M:QQChannelFramework.Expansions.Bot.ChannelBot.OfflineAsync">
            <summary>
            机器人下线
            </summary>
        </member>
        <member name="M:QQChannelFramework.Expansions.Bot.ChannelBot.Resume">
            <summary>
            执行重连 (如果处于连接状态将会主动断开后连接)
            </summary>
        </member>
        <member name="M:QQChannelFramework.Expansions.Bot.ChannelBot.RegisterCommand(System.String,System.Action{QQChannelFramework.Models.CommandInfo})">
            <summary>
            注册普通指令
            </summary>
            <param name="command">文字指令 (字符敏感)</param>
            <param name="commandAction">指令执行</param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Expansions.Bot.ChannelBot.UnloadCommand(System.String)">
            <summary>
            卸载指令
            </summary>
            <param name="command">指令</param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:QQChannelFramework.Expansions.Bot.ChannelBot.ChangeActionAsync(System.String,System.Action{QQChannelFramework.Models.CommandInfo})">
            <summary>
            更换普通指令的处理函数 (替换后3秒后生效)
            </summary>
            <param name="command">指令</param>
            <param name="newCommandAction">新处理函数</param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Expansions.Bot.ChannelBot.RegisterStepCommand(System.String,System.Action{QQChannelFramework.Models.CommandInfo,QQChannelFramework.Models.CommandState}[])">
            <summary>
            注册步骤指令
            </summary>
            <param name="command"></param>
            <param name="commandActions"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Expansions.Bot.ChannelBot.RemoveCommandState(System.String,System.String)">
            <summary>
            删除步骤指令状态
            </summary>
            <param name="command"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Expansions.Bot.ChannelBot.ChangeStepCommandActionAsync(System.String,System.Int32,System.Action{QQChannelFramework.Models.CommandInfo,QQChannelFramework.Models.CommandState})">
            <summary>
            更换步骤指令的处理函数 (替换后3秒生效)
            </summary>
            <param name="command">指令</param>
            <param name="step">替换第几步</param>
            <param name="newCommandAction">新处理函数</param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="T:QQChannelFramework.Models.ChannelPermissions">
            <summary>
            子频道权限对象
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.ChannelPermissions.ChannelId">
            <summary>
            子频道ID
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.ChannelPermissions.UserId">
            <summary>
            用户 ID
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.ChannelPermissions.Permissions">
            <summary>
            权限位图 (十进制)
            </summary>
        </member>
        <member name="T:QQChannelFramework.Models.ChildChannel">
            <summary>
            子频道对象
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.ChildChannel.Id">
            <summary>
            子频道ID
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.ChildChannel.GuildId">
            <summary>
            所处主频道ID
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.ChildChannel.Name">
            <summary>
            子频道名称
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.ChildChannel.Type">
            <summary>
            子频道类型
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.ChildChannel.SubType">
            <summary>
            子类型
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.ChildChannel.Position">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.ChildChannel.ParentId">
            <summary>
            分组ID
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.ChildChannel.OwnerId">
            <summary>
            创建人ID
            </summary>
        </member>
        <member name="T:QQChannelFramework.Models.CommandInfo">
            <summary>
            指令信息
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.CommandInfo.Key">
            <summary>
            指令
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.CommandInfo.Param">
            <summary>
            指令参数
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.CommandInfo.MessageId">
            <summary>
            消息ID
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.CommandInfo.GuildId">
            <summary>
            指令主频道ID
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.CommandInfo.ChannelId">
            <summary>
            指令来源子频道ID
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.CommandInfo.Sender">
            <summary>
            发送人信息
            </summary>
        </member>
        <member name="T:QQChannelFramework.Models.CommandState">
            <summary>
            指令状态
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.CommandState.Step">
            <summary>
            当前步骤
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.CommandState.MaxStep">
            <summary>
            最大步骤
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.CommandState.Data">
            <summary>
            附带数据
            </summary>
        </member>
        <member name="M:QQChannelFramework.Models.CommandState.Next">
            <summary>
            下一步
            </summary>
        </member>
        <member name="M:QQChannelFramework.Models.CommandState.Prev">
            <summary>
            上一步
            </summary>
        </member>
        <member name="T:QQChannelFramework.Models.Guild">
            <summary>
            主频道对象
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.Guild.Id">
            <summary>
            频道ID
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.Guild.Name">
            <summary>
            频道名称
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.Guild.Icon">
            <summary>
            频道头像Url
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.Guild.OwnerId">
            <summary>
            频道创建人用户ID
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.Guild.Owner">
            <summary>
            当前人是否为创建人
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.Guild.MemberCount">
            <summary>
            当前成员数
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.Guild.MaxMembers">
            <summary>
            最大成员数
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.Guild.Description">
            <summary>
            频道描述
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.Guild.JoinedAt">
            <summary>
            加入时间
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.Guild.UnionWorldId">
            <summary>
            游戏绑定公会区服ID，需要特殊申请并配置后才会返回
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.Guild.UnionOrgId">
            <summary>
            游戏绑定公会/战队ID，需要特殊申请并配置后才会返回
            </summary>
        </member>
        <member name="T:QQChannelFramework.Models.Member">
            <summary>
            成员对象
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.Member.User">
            <summary>
            用户基础信息
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.Member.Nick">
            <summary>
            频道内昵称
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.Member.Roles">
            <summary>
            用户在频道内的身份组ID
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.Member.JoinedAt">
            <summary>
            用户加入频道的时间
            </summary>
        </member>
        <member name="T:QQChannelFramework.Models.MemberWithGuildID">
            <summary>
            成员信息与所在频道信息对象
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MemberWithGuildID.GuildId">
            <summary>
            所在主频道Id
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MemberWithGuildID.Nick">
            <summary>
            用户在频道内的昵称
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MemberWithGuildID.Roles">
            <summary>
            用户在频道内的身份
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MemberWithGuildID.JoinedAt">
            <summary>
            用户加入频道的时间
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MemberWithGuildID.User">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MemberWithGuildID.OperationUserId">
            <summary>
            操作人Id
            </summary>
        </member>
        <member name="T:QQChannelFramework.Models.MessageModels.Message">
            <summary>
            消息对象
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MessageModels.Message.Id">
            <summary>
            消息Id
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MessageModels.Message.ChildChannelId">
            <summary>
            子频道
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MessageModels.Message.GuildId">
            <summary>
            主频道
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MessageModels.Message.Content">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MessageModels.Message.Time">
            <summary>
            消息创建时间
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MessageModels.Message.EditedTime">
            <summary>
            消息编辑时间
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MessageModels.Message.MentionEveryone">
            <summary>
            是否@全体成员
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MessageModels.Message.Author">
            <summary>
            消息创建者
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MessageModels.Message.Attachments">
            <summary>
            附件
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MessageModels.Message.Mentions">
            <summary>
            消息中@的人
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MessageModels.Message.Member">
            <summary>
            消息创建者的Member信息
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MessageModels.Message.Ark">
            <summary>
            ark消息
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MessageModels.MessageArk.TemplateId">
            <summary>
            模版ID
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MessageModels.MessageArk.Kv">
            <summary>
            kv值列表
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MessageModels.MessageArkObj.ObjKv">
            <summary>
            ark objkv列表
            </summary>
        </member>
        <member name="T:QQChannelFramework.Models.MessageModels.MessageAttachment">
            <summary>
            消息附件
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MessageModels.MessageAttachment.Url">
            <summary>
            附件地址
            </summary>
        </member>
        <member name="T:QQChannelFramework.Models.MessageModels.MessageEmbed">
            <summary>
            消息内嵌
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MessageModels.MessageEmbed.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MessageModels.MessageEmbed.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MessageModels.MessageEmbed.Prompt">
            <summary>
            消息弹窗内容
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MessageModels.MessageEmbed.Time">
            <summary>
            消息创建时间
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MessageModels.MessageEmbed.Fields">
            <summary>
            Fields
            </summary>
        </member>
        <member name="T:QQChannelFramework.Models.MessageModels.MessageEmbedField">
            <summary>
            消息内嵌数据
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MessageModels.MessageEmbedField.Name">
            <summary>
            字段名
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.MessageModels.MessageEmbedField.Value">
            <summary>
            字段值
            </summary>
        </member>
        <member name="T:QQChannelFramework.Models.ParamModels.Filter">
            <summary>
            创建频道身份组参数模型 - 标识需要设置/修改哪些字段
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.ParamModels.Filter.Name">
            <summary>
            是否设置名称
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.ParamModels.Filter.Color">
            <summary>
            是否设置颜色
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.ParamModels.Filter.Hoist">
            <summary>
            是否设置在成员列表中单独展示
            </summary>
        </member>
        <member name="T:QQChannelFramework.Models.ParamModels.Info">
            <summary>
            创建频道身份组参数模型 - 携带需要设置/修改的字段内容
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.ParamModels.Info.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.ParamModels.Info.Color">
            <summary>
            不带A通道的RGB十六进制颜色值 例如: #ff6542
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.ParamModels.Info.Hoist">
            <summary>
            在成员列表中单独展示
            </summary>
        </member>
        <member name="T:QQChannelFramework.Models.RawObject.RawChildChannel">
            <summary>
            源对象 - 子频道对象
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.RawObject.RawChildChannel.id">
            <summary>
            子频道id
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.RawObject.RawChildChannel.guild_id">
            <summary>
            频道id
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.RawObject.RawChildChannel.name">
            <summary>
            子频道名
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.RawObject.RawChildChannel.type">
            <summary>
            子频道类型
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.RawObject.RawChildChannel.sub_type">
            <summary>
            子频道子类型
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.RawObject.RawChildChannel.position">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.RawObject.RawChildChannel.parent_id">
            <summary>
            分组 id
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.RawObject.RawChildChannel.owner_id">
            <summary>
            创建人 id
            </summary>
        </member>
        <member name="T:QQChannelFramework.Models.Role">
            <summary>
            频道身份组对象
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.Role.Id">
            <summary>
            身份组ID
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.Role.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.Role.Color">
            <summary>
            颜色，ARGB的HEX十六进制颜色值转换后的十进制数值
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.Role.Hoist">
            <summary>
            是否在成员列表中单独展示
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.Role.Number">
            <summary>
            人数
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.Role.MemberLimit">
            <summary>
            最大人数
            </summary>
        </member>
        <member name="T:QQChannelFramework.Models.ShardSessionStartLimit">
            <summary>
            分片Session限制信息
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.ShardSessionStartLimit.Total">
            <summary>
            每 24 小时可创建 Session 数
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.ShardSessionStartLimit.Remaining">
            <summary>
            目前还可以创建的 Session 数
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.ShardSessionStartLimit.ResetAfter">
            <summary>
            重置计数的剩余时间(ms)
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.ShardSessionStartLimit.MaxConcurrency">
            <summary>
            每 5s 可以创建的 Session 数
            </summary>
        </member>
        <member name="T:QQChannelFramework.Models.ShardWssInfo">
            <summary>
            分片WSS接入点基础信息
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.ShardWssInfo.Url">
            <summary>
            WebSocket 的连接地址
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.ShardWssInfo.Shards">
            <summary>
            建议的 shard 数
            </summary>
        </member>
        <member name="T:QQChannelFramework.Models.Types.ChildChannelSubType">
            <summary>
            子类型
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.ChildChannelSubType.IdleChat">
            <summary>
            闲聊
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.ChildChannelSubType.Announcement">
            <summary>
            公告
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.ChildChannelSubType.Strategy">
            <summary>
            攻略
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.ChildChannelSubType.Party">
            <summary>
            开黑
            </summary>
        </member>
        <member name="T:QQChannelFramework.Models.Types.GuildEvents">
            <summary>
            频道事件枚举
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.GuildEvents.READY">
            <summary>
            就绪
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.GuildEvents.GUILD_CREATE">
            <summary>
            当机器人加入新频道时
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.GuildEvents.GUILD_UPDATE">
            <summary>
            当主频道资料发生变更时
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.GuildEvents.GUILD_DELETE">
            <summary>
            当机器人退出频道时
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.GuildEvents.CHANNEL_CREATE">
            <summary>
            当子频道被创建时
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.GuildEvents.CHANNEL_UPDATE">
            <summary>
            当子频道信息被更新时
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.GuildEvents.CHANNEL_DELETE">
            <summary>
            当子频道被删除时
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.GuildEvents.GUILD_MEMBER_ADD">
            <summary>
            当成员加入时
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.GuildEvents.GUILD_MEMBER_UPDATE">
            <summary>
            当成员资料变更时
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.GuildEvents.GUILD_MEMBER_REMOVE">
            <summary>
            当成员被移除时
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.GuildEvents.DIRECT_MESSAGE_CREATE">
            <summary>
            当收到用户发给机器人的私信消息时
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.GuildEvents.AUDIO_START">
            <summary>
            音频开始播放时
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.GuildEvents.AUDIO_FINISH">
            <summary>
            音频播放结束时
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.GuildEvents.AUDIO_ON_MIC">
            <summary>
            上麦时
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.GuildEvents.AUDIO_OFF_MIC">
            <summary>
            下麦时
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.GuildEvents.AT_MESSAGE_CREATE">
            <summary>
            当收到@机器人的消息时
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.GuildEvents.RESUMED">
            <summary>
            重连事件补发完毕
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.GuildEvents.MESSAGE_CREATE">
            <summary>
            用户发送消息
            </summary>
        </member>
        <member name="T:QQChannelFramework.Models.Types.Intents">
            <summary>
            频道Intents
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.Intents.Guilds">
            <summary>
            频道类相关事件
            <para>包含: </para>
            <para>当机器人加入新频道时</para>
            <para>当频道资料发生变更时</para>
            <para>当机器人退出频道时</para>
            <para>当子频道被创建时</para>
            <para>当子频道被更新时</para>
            <para>当子频道被删除时</para>
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.Intents.GuildMembers">
            <summary>
            频道成员相关事件
            <para>包含: </para>
            <para>当成员加入时</para>
            <para>当成员资料变更时</para>
            <para>当成员被移除时</para>
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.Intents.DirectMessage">
            <summary>
            私聊事件
            <para>当收到用户发给机器人的私信消息时</para>
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.Intents.AudioAction">
            <summary>
            音频类相关事件
            <para>包含: </para>
            <para>音频开始播放时</para>
            <para>音频播放结束时</para>
            <para>上麦时</para>
            <para>下麦时</para>
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.Intents.AtMessage">
            <summary>
            @机器人事件
            <para>当收到@机器人的消息时</para>
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.Intents.UserMessage">
            <summary>
            用户发送消息 (私域机器人可用)
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.OpCode.Dispatch">
            <summary>
            服务端进行消息推送
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.OpCode.Heartbeat">
            <summary>
            客户端或服务端发送心跳
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.OpCode.Identify">
            <summary>
            客户端发送鉴权
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.OpCode.Resume">
            <summary>
            客户端恢复连接
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.OpCode.Reconnect">
            <summary>
            服务端通知客户端重新连接
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.OpCode.InvalidSession">
            <summary>
            当identify或resume的时候，如果参数有错，服务端会返回该消息
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.OpCode.Hello">
            <summary>
            当客户端与网关建立ws连接之后，网关下发的第一条消息
            </summary>
        </member>
        <member name="F:QQChannelFramework.Models.Types.OpCode.HeartbeatACK">
            <summary>
            当发送心跳成功之后，就会收到该消息
            </summary>
        </member>
        <member name="T:QQChannelFramework.Models.User">
            <summary>
            用户对象
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.User.Id">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.User.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.User.Avatar">
            <summary>
            头像Url
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.User.IsBot">
            <summary>
            是否是机器人
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.User.UnionOpenid">
            <summary>
            特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.User.UnionUserAccount">
            <summary>
            机器人关联的互联应用的用户信息，与union_openid关联的应用是同一个。如需申请，请联系平台运营人员
            </summary>
        </member>
        <member name="T:QQChannelFramework.Models.WsModels.IdentifyData">
            <summary>
            WebSocket鉴权信息
            </summary>
        </member>
        <member name="T:QQChannelFramework.Models.WsModels.Load">
            <summary>
            负载结构
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.WsModels.Load.op">
            <summary>
            opcode
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.WsModels.Load.d">
            <summary>
            事件内容
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.WsModels.Load.s">
            <summary>
            唯一序列号
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.WsModels.Load.t">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="T:QQChannelFramework.Models.WsModels.SessionInfo">
            <summary>
            会话信息
            </summary>
        </member>
        <member name="T:QQChannelFramework.Models.WsModels.WsChildChannel">
            <summary>
            WebSocket接收的ChildChannel数据对象
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.WsModels.WsChildChannel.OperationUserId">
            <summary>
            操作人的ID
            </summary>
        </member>
        <member name="T:QQChannelFramework.Models.WsModels.WsGuild">
            <summary>
            WebSocket接收的Guild数据对象
            </summary>
        </member>
        <member name="P:QQChannelFramework.Models.WsModels.WsGuild.OperationUserId">
            <summary>
            操作人的ID
            </summary>
        </member>
        <member name="T:QQChannelFramework.OfficialExceptions.OfficialException">
            <summary>
            官方异常识别特性
            </summary>
        </member>
        <member name="T:QQChannelFramework.Tools.ConvertHelper">
            <summary>
            转换辅助类
            </summary>
        </member>
        <member name="M:QQChannelFramework.Tools.ConvertHelper.GetHex(System.String)">
            <summary>
            16进制颜色值转换至10进制uint
            </summary>
            <param name="colorStr"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Tools.ConvertHelper.GetDateTime(System.Int32)">
            <summary>
            时间戳转DetaTime
            </summary>
            <param name="timeStamp"></param>
            <returns></returns>
        </member>
        <member name="T:QQChannelFramework.Tools.TemplateHelper.MessageTemplateHelper">
            <summary>
            消息模版帮助类
            </summary>
        </member>
        <member name="M:QQChannelFramework.Tools.TemplateHelper.MessageTemplateHelper.GetBigImageTemplateHelper">
            <summary>
            获取大图消息模版构建器实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Tools.TemplateHelper.MessageTemplateHelper.GetLinkAndTextListTemplateHelper">
            <summary>
            获取链接+文本消息模版构建器实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Tools.TemplateHelper.MessageTemplateHelper.GetTextAndThumbnailTemplateHelper">
            <summary>
            获取文本+略缩图消息模版构建器实例
            </summary>
            <returns></returns>
        </member>
        <member name="T:QQChannelFramework.Tools.TemplateHelper.BigImageTemplateHelper">
            <summary>
            大图消息模版构建类
            </summary>
        </member>
        <member name="M:QQChannelFramework.Tools.TemplateHelper.BigImageTemplateHelper.SetPrompt(System.String)">
            <summary>
            设置提示消息
            </summary>
            <param name="prompt"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Tools.TemplateHelper.BigImageTemplateHelper.WithReplyMessageId(System.String)">
            <summary>
            携带回复的消息ID
            </summary>
            <param name="messageId"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Tools.TemplateHelper.BigImageTemplateHelper.SetTitle(System.String)">
            <summary>
            设置主标题
            </summary>
            <param name="title"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Tools.TemplateHelper.BigImageTemplateHelper.SetSubTitle(System.String)">
            <summary>
            设置子标题
            </summary>
            <param name="subTitle"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Tools.TemplateHelper.BigImageTemplateHelper.SetImage(System.String)">
            <summary>
            设置图片
            </summary>
            <param name="url">图片链接</param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Tools.TemplateHelper.BigImageTemplateHelper.SetLink(System.String)">
            <summary>
            设置跳转链接
            </summary>
            <param name="link"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Tools.TemplateHelper.BigImageTemplateHelper.BuildTemplate">
            <summary>
            构建模版
            </summary>
            <returns></returns>
        </member>
        <member name="T:QQChannelFramework.Tools.TemplateHelper.LinkAndTextListTemplateHelper">
            <summary>
            链接+文本消息模版构建类
            </summary>
        </member>
        <member name="M:QQChannelFramework.Tools.TemplateHelper.LinkAndTextListTemplateHelper.SetDescribe(System.String)">
            <summary>
            设置描述
            </summary>
            <param name="describe"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Tools.TemplateHelper.LinkAndTextListTemplateHelper.SetPrompt(System.String)">
            <summary>
            设置提示消息
            </summary>
            <param name="prompt"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Tools.TemplateHelper.LinkAndTextListTemplateHelper.AddText(System.String)">
            <summary>
            添加一行文字
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Tools.TemplateHelper.LinkAndTextListTemplateHelper.AddTextWithLink(System.String,System.String)">
            <summary>
            添加一行带链接的文字 (链接需经过审核)
            </summary>
            <param name="text"></param>
            <param name="link"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Tools.TemplateHelper.LinkAndTextListTemplateHelper.WithReplyMessageId(System.String)">
            <summary>
            携带回复的消息ID
            </summary>
            <param name="messageId"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Tools.TemplateHelper.LinkAndTextListTemplateHelper.BuildTemplate">
            <summary>
            构建模版
            </summary>
            <returns></returns>
        </member>
        <member name="T:QQChannelFramework.Tools.TemplateHelper.TextAndThumbnailTemplateHelper">
            <summary>
            文本+略缩图消息模版构建类
            </summary>
        </member>
        <member name="M:QQChannelFramework.Tools.TemplateHelper.TextAndThumbnailTemplateHelper.SetDescribe(System.String)">
            <summary>
            设置描述
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Tools.TemplateHelper.TextAndThumbnailTemplateHelper.WithReplyMessageId(System.String)">
            <summary>
            携带回复的消息ID
            </summary>
            <param name="messageId"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Tools.TemplateHelper.TextAndThumbnailTemplateHelper.SetPrompt(System.String)">
            <summary>
            设置提示消息
            </summary>
            <param name="prompt"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Tools.TemplateHelper.TextAndThumbnailTemplateHelper.SetTitle(System.String)">
            <summary>
            设置主标题
            </summary>
            <param name="title"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Tools.TemplateHelper.TextAndThumbnailTemplateHelper.SetMetaDescribe(System.String)">
            <summary>
            设置详情描述
            </summary>
            <param name="metaDescribe"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Tools.TemplateHelper.TextAndThumbnailTemplateHelper.SetImg(System.String)">
            <summary>
            设置略缩图
            </summary>
            <param name="imgUrl">图片URL</param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Tools.TemplateHelper.TextAndThumbnailTemplateHelper.SetLink(System.String)">
            <summary>
            设置跳转链接
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Tools.TemplateHelper.TextAndThumbnailTemplateHelper.SetSubTitle(System.String)">
            <summary>
            设置子标题
            </summary>
            <param name="subTitle"></param>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.Tools.TemplateHelper.TextAndThumbnailTemplateHelper.BuildTemplate">
            <summary>
            构建模版
            </summary>
            <returns></returns>
        </member>
        <member name="E:QQChannelFramework.WS.BaseWebSocket.OnConnected">
            <summary>
            连接成功事件
            </summary>
        </member>
        <member name="E:QQChannelFramework.WS.BaseWebSocket.OnError">
            <summary>
            连接异常事件
            </summary>
        </member>
        <member name="E:QQChannelFramework.WS.BaseWebSocket.OnReceived">
            <summary>
            收到消息事件
            </summary>
        </member>
        <member name="E:QQChannelFramework.WS.BaseWebSocket.OnClose">
            <summary>
            链接关闭事件
            </summary>
        </member>
        <member name="E:QQChannelFramework.WS.BaseWebSocket.OnSend">
            <summary>
            数据发送成功事件
            </summary>
        </member>
        <member name="M:QQChannelFramework.WS.BaseWebSocket.Connect(System.String)">
            <summary>
            开始连接
            </summary>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:QQChannelFramework.WS.BaseWebSocket.SendAsync(System.String)">
            <summary>
            发送数据
            </summary>
            <param name="jsonData"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:QQChannelFramework.WS.BaseWebSocket.CloseAsync">
            <summary>
            关闭连接
            </summary>
        </member>
        <member name="T:QQChannelFramework.WS.FunctionWebSocket">
            <summary>
            功能性WebSocket
            </summary>
        </member>
        <member name="E:QQChannelFramework.WS.FunctionWebSocket.BotAreAddedToTheGuild">
            <summary>
            <para>触发时机: </para>
            <para>机器人被加入到某个频道的时候</para>
            </summary>
        </member>
        <member name="E:QQChannelFramework.WS.FunctionWebSocket.GuildInfoChange">
            <summary>
            <para>触发时机: </para>
            <para>频道信息变更</para>
            </summary>
        </member>
        <member name="E:QQChannelFramework.WS.FunctionWebSocket.BotBeRemoved">
            <summary>
            <para>触发时机: </para>
            <para>频道被解散</para>
            <para>机器人被移除</para>
            </summary>
        </member>
        <member name="E:QQChannelFramework.WS.FunctionWebSocket.ChildChannelCreated">
            <summary>
            <para>触发时机: </para>
            <para>子频道被创建</para>
            </summary>
        </member>
        <member name="E:QQChannelFramework.WS.FunctionWebSocket.ChildChannelInfoChange">
            <summary>
            <para>触发时机: </para>
            <para>子频道信息变更</para>
            </summary>
        </member>
        <member name="E:QQChannelFramework.WS.FunctionWebSocket.ChildChannelBeRemoved">
            <summary>
            <para>触发时机: </para>
            <para>子频道被删除</para>
            </summary>
        </member>
        <member name="E:QQChannelFramework.WS.FunctionWebSocket.NewMemberJoin">
            <summary>
            <para>触发时机: </para>
            <para>新成员加入频道</para>
            </summary>
        </member>
        <member name="E:QQChannelFramework.WS.FunctionWebSocket.MemberInfoChange">
            <summary>
            <para>触发时机: </para>
            <para>成员信息变更</para>
            </summary>
        </member>
        <member name="E:QQChannelFramework.WS.FunctionWebSocket.MemberExistGuild">
            <summary>
            <para>触发时机: </para>
            <para>成员退出频道</para>
            </summary>
        </member>
        <member name="E:QQChannelFramework.WS.FunctionWebSocket.ReceivedAtMessage">
            <summary>
            <para>触发时机: </para>
            <para>用户发送消息，并且@当前机器人</para>
            </summary>
        </member>
        <member name="E:QQChannelFramework.WS.FunctionWebSocket.ReceivedUserMessage">
            <summary>
            <para>触发时机: </para>
            <para>用户发送消息时 (仅私域机器人可用)</para>
            </summary>
        </member>
        <member name="E:QQChannelFramework.WS.FunctionWebSocket.OnDispatch">
            <summary>
            <para>触发时机: </para>
            <para>收到事件消息时</para>
            </summary>
        </member>
        <member name="E:QQChannelFramework.WS.FunctionWebSocket.HeartbeatSendSuccess">
            <summary>
            <para>触发时机: </para>
            <para>心跳发送成功时</para>
            </summary>
        </member>
        <member name="E:QQChannelFramework.WS.FunctionWebSocket.HeartbeatBreak">
            <summary>
            <para>触发时机: </para>
            <para>心跳中断</para>
            </summary>
        </member>
        <member name="E:QQChannelFramework.WS.FunctionWebSocket.AuthenticationError">
            <summary>
            <para>触发时机: </para>
            <para>鉴权失败时</para>
            </summary>
        </member>
        <member name="E:QQChannelFramework.WS.FunctionWebSocket.AuthenticationSuccess">
            <summary>
            <para>触发时机: </para>
            <para>鉴权成功时</para>
            </summary>
        </member>
        <member name="E:QQChannelFramework.WS.FunctionWebSocket.Resumed">
            <summary>
            <para>触发时机: </para>
            <para>重连事件补发完毕时</para>
            </summary>
        </member>
        <member name="M:QQChannelFramework.WS.FunctionWebSocket.UsePrivateBot">
            <summary>
            指定为私域机器人
            </summary>
        </member>
        <member name="M:QQChannelFramework.WS.FunctionWebSocket.EnableUserMessageTriggerCommand">
            <summary>
            启用无须@ 触发指令功能 (私域机器人可用)
            </summary>
        </member>
        <member name="M:QQChannelFramework.WS.FunctionWebSocket.CloseUserMessageTriggerCommand">
            <summary>
            关闭无须@ 触发指令功能 (私域机器人可用)
            </summary>
        </member>
        <member name="M:QQChannelFramework.WS.FunctionWebSocket.Process(Newtonsoft.Json.Linq.JToken)">
            <summary>
            处理数据
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:QQChannelFramework.WS.FunctionWebSocket.RegisterGuildsEvent">
            <summary>
            注册频道相关事件
            <para>包含: </para>
            <para>当机器人加入新频道时</para>
            <para>当频道资料发生变更时</para>
            <para>当机器人退出频道时</para>
            <para>当子频道被创建时</para>
            <para>当子频道被更新时</para>
            <para>当子频道被删除时</para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.WS.FunctionWebSocket.RegisterGuildMembersEvent">
            <summary>
            注册频道成员相关事件
            <para>包含: </para>
            <para>当成员加入时</para>
            <para>当成员资料变更时</para>
            <para>当成员被移除时</para>
            </summary>
            <returns></returns> 
        </member>
        <member name="M:QQChannelFramework.WS.FunctionWebSocket.RegisterDirectMessageEvent">
            <summary>
            注册直接消息相关事件
            <para>包含: </para>
            <para>当收到用户发给机器人的私信消息时</para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.WS.FunctionWebSocket.RegisterAudioActionEvent">
            <summary>
            注册音频类相关事件
            <para>包含: </para>
            <para>音频开始播放时</para>
            <para>音频播放结束时</para>
            <para>上麦时</para>
            <para>下麦时</para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:QQChannelFramework.WS.FunctionWebSocket.RegisterAtMessageEvent">
            <summary>
            注册@机器人事件
            <para>当收到@机器人的消息时</para>
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:QQChannelFramework.WS.FunctionWebSocket.RegisterUserMessageEvent" -->
        <member name="T:OpenApiAccessInfo">
            <summary>
            OpenApi接入信息
            </summary>
        </member>
        <member name="P:OpenApiAccessInfo.BotAppId">
            <summary>
            机器人开发识别码
            </summary>
        </member>
        <member name="P:OpenApiAccessInfo.BotToken">
            <summary>
            机器人Token
            </summary>
        </member>
        <member name="P:OpenApiAccessInfo.BotSecret">
            <summary>
            机器人密钥
            </summary>
        </member>
        <member name="T:ChannelModels.Returns.GetChannelRolesResult">
            <summary>
            获取的频道身份组列表模型
            </summary>
        </member>
        <member name="P:ChannelModels.Returns.GetChannelRolesResult.GuildID">
            <summary>
            频道ID
            </summary>
        </member>
        <member name="P:ChannelModels.Returns.GetChannelRolesResult.Roles">
            <summary>
            一组频道身份组对象
            </summary>
        </member>
        <member name="P:ChannelModels.Returns.GetChannelRolesResult.RoleNumLimit">
            <summary>
            默认分组上限
            </summary>
        </member>
        <member name="T:ChannelModels.Returns.GetJoinChannelsResult">
            <summary>
            获机器人加入频道
            </summary>
        </member>
        <member name="P:ChannelModels.Returns.GetJoinChannelsResult.Guild">
            <summary>
            频道Guild
            </summary>
        </member>
        <member name="P:ChannelModels.Returns.GetJoinChannelsResult.Name">
            <summary>
            频道名称
            </summary>
        </member>
        <member name="P:ChannelModels.Returns.GetJoinChannelsResult.Icon">
            <summary>
            频道头像Url
            </summary>
        </member>
        <member name="P:ChannelModels.Returns.GetJoinChannelsResult.Owner">
            <summary>
            是否为拥有者
            </summary>
        </member>
        <member name="T:ChannelModels.Types.AudioStatus">
            <summary>
            播放状态
            </summary>
        </member>
        <member name="F:ChannelModels.Types.AudioStatus.Start">
            <summary>
            开始播放操作
            </summary>
        </member>
        <member name="F:ChannelModels.Types.AudioStatus.Pause">
            <summary>
            暂停播放操作
            </summary>
        </member>
        <member name="F:ChannelModels.Types.AudioStatus.Resume">
            <summary>
            继续播放操作
            </summary>
        </member>
        <member name="F:ChannelModels.Types.AudioStatus.Stop">
            <summary>
            停止播放操作
            </summary>
        </member>
        <member name="T:ChannelModels.Types.ChildChannelType">
            <summary>
            子频道类型
            </summary>
        </member>
        <member name="F:ChannelModels.Types.ChildChannelType.Text">
            <summary>
            文字子频道
            </summary>
        </member>
        <member name="F:ChannelModels.Types.ChildChannelType.Private">
            <summary>
            私聊子频道
            </summary>
        </member>
        <member name="F:ChannelModels.Types.ChildChannelType.Audio">
            <summary>
            语音子频道
            </summary>
        </member>
        <member name="F:ChannelModels.Types.ChildChannelType.MultiUserPrivate">
            <summary>
            多人私聊子频道
            </summary>
        </member>
        <member name="F:ChannelModels.Types.ChildChannelType.Child">
            <summary>
            子频道分类
            </summary>
        </member>
        <member name="F:ChannelModels.Types.ChildChannelType.Live">
            <summary>
            直播子频道
            </summary>
        </member>
    </members>
</doc>
